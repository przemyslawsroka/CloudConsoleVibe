steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/cloud-console-vibe:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/cloud-console-vibe:latest'
      - '.'
    
  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/cloud-console-vibe:$BUILD_ID'
      
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/cloud-console-vibe:latest'

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'cloudconsolevibe-frontend'
      - '--image=gcr.io/$PROJECT_ID/cloud-console-vibe:$BUILD_ID'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--max-instances=10'
      - '--min-instances=0'
      - '--concurrency=100'
      - '--timeout=300'
      - '--set-env-vars=ENVIRONMENT=production,LOG_LEVEL=info,BACKEND_URL=https://cloudconsolevibe-backend-931553324054.us-central1.run.app'

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/cloud-console-vibe:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/cloud-console-vibe:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE' 